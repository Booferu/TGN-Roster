<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>TGN Party Boss Blitz Roster</title>
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet">
  <style>
    body {
      font-family: 'Inter', sans-serif;
      margin: 0;
      padding: 2rem;
      background-color: #f9f9f9;
      color: #333;
    }
    h1 {
      text-align: center;
      font-size: 2rem;
      margin-bottom: 1rem;
    }
    .description {
      text-align: center;
      max-width: 600px;
      margin: 0 auto 2rem;
      font-size: 1rem;
    }
    .legend {
      display: flex;
      justify-content: center;
      gap: 2rem;
      margin-bottom: 2rem;
    }
    .legend span {
      padding: 0.3rem 0.6rem;
      border-radius: 6px;
      font-weight: 600;
    }
    .guild { background-color: #8fd694; } /* Brighter green */
    .merc { background-color: #c89ff1; } /* Soft purple */
    .roster {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
      gap: 1.5rem;
    }
    .group {
      background: #fff;
      border-radius: 10px;
      box-shadow: 0 2px 6px rgba(0,0,0,0.1);
      padding: 1rem;
    }
    .group h2 {
      font-size: 1.2rem;
      margin-bottom: 0.5rem;
      border-bottom: 1px solid #ccc;
      padding-bottom: 0.3rem;
    }
    .player-list {
      list-style: none;
      padding: 0;
    }
    .player-list li {
      padding: 0.4rem;
      border-bottom: 1px solid #eee;
    }
    .timezone {
      font-size: 0.9rem;
      margin-top: 0.5rem;
      color: #666;
    }
    footer {
      text-align: center;
      margin-top: 2rem;
      font-size: 0.85rem;
      color: #888;
    }
  </style>
</head>
<body>
  <h1>TGN Party Boss Blitz Roster</h1>
  <div class="description">
    This sheet organizes static groups for the weekly <strong>Party Boss Blitz</strong> content. <br>
    <strong>Guild members (✔) have priority</strong>. Mercenaries (✦) are welcome to fill in but may be replaced if a guild member signs up.
  </div>
  <div class="legend">
    <span class="guild">✔ Guild Member</span>
    <span class="merc">✦ Mercenary</span>
  </div>
  <div class="roster" id="roster">
    <!-- Groups will be loaded here -->
  </div>
  <footer>
    Powered by TGN &middot; Static fallback with Google Sheets support
  </footer>
  <script>
    const fallbackData = [
      { group: "Group 1", timeUTC: "18:00", players: ["✔ Alex", "✔ Tara", "✦ Jamie", "", ""] },
      { group: "Group 2", timeUTC: "19:00", players: ["✔ Mike", "✦ Nina", "", "", ""] },
      { group: "Group 3", timeUTC: "20:00", players: ["", "", "", "", ""] },
      { group: "Group 4", timeUTC: "21:00", players: ["", "", "", "", ""] },
      { group: "Group 5", timeUTC: "22:00", players: ["", "", "", "", ""] },
      { group: "Group 6", timeUTC: "23:00", players: ["", "", "", "", ""] },
      { group: "Group 7", timeUTC: "00:00", players: ["", "", "", "", ""] },
      { group: "Group 8", timeUTC: "01:00", players: ["", "", "", "", ""] },
      { group: "Group 9", timeUTC: "02:00", players: ["", "", "", "", ""] },
      { group: "Group 10", timeUTC: "03:00", players: ["", "", "", "", ""] }
    ];

    function renderGroups(data) {
      const container = document.getElementById('roster');
      container.innerHTML = ''; // Clear previous
      data.forEach(group => {
        const div = document.createElement('div');
        div.className = 'group';
        div.innerHTML = `
          <h2>${group.group}</h2>
          <div class="timezone">Time (UTC): ${group.timeUTC}</div>
          <ul class="player-list">
            ${group.players.map(name => `<li>${name || "- empty -"}</li>`).join('')}
          </ul>
        `;
        container.appendChild(div);
      });
    }

    async function fetchFromGoogleSheet() {
      try {
        const sheetURL = "https://opensheet.elk.sh/YOUR_SHEET_ID/Sheet1"; // Replace with your actual Sheet ID
        const response = await fetch(sheetURL);
        const json = await response.json();
        const data = json.map(row => ({
          group: row.Group,
          timeUTC: row["Time (UTC)"],
          players: [row["Player 1"], row["Player 2"], row["Player 3"], row["Player 4"], row["Player 5"]]
        }));
        renderGroups(data);
      } catch (e) {
        console.warn("Falling back to static data", e);
        renderGroups(fallbackData);
      }
    }

    fetchFromGoogleSheet();
  </script>
</body>
</html>
